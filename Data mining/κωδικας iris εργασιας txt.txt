load iris.dat;
setosa=iris((iris(:,5)==1),:);      % data for setosa (label = 1)
versicolor=iris((iris(:,5)==2),:);  % data for versicolor (label = 2)
virginica=iris((iris(:,5)==3),:);   % data for virginica (label = 3)
obsv_n=size(iris,1);                % total number of observations

%2-D representation
Characteristics={'sepal length','sepal width', 'petal length','petal width'};
pairs=[1 2; 1 3; 1 4; 2 3; 2 4; 3 4];
for j=1:6,
    x=pairs(j,1);
    y=pairs(j,2);
    subplot(2,3,j);

    % The following code aims at plotting 3 pairs: setosa(y) vs
    % setosa(x), versicolor(y) vs versicolor(x) etc. These pairs will be
    % plotted in different color (by default).

    % MarkerSize in order to define dot size.

    % Matix Characteristics is used to print the right labels next to x/y
    % axes.
    plot([setosa(:,x) versicolor(:,x) virginica(:,x)],...
        [setosa(:,y) versicolor(:,y) virginica(:,y)],'.','MarkerSize',10);
    xlabel(Characteristics(x));
    ylabel(Characteristics(y));
end

[ro,co]=size(iris);
p=60;               % Percentage of NaN values that will replace initial values in the iris data set
irisV=iris;         % irisV-> Modified iris dataset
r1=randperm(ro);    % random permutaion: returns a row vector containing a random permutation of the integers from 1 to n inclusive.
irisV(r1(1:p),1)=NaN;   % replace 60% of first column's values with NaN

r1=randperm(ro);
irisV(r1(1:p),2)=NaN;   % replace 60% of second column's values with NaN

r1=randperm(ro);
irisV(r1(1:p),3)=NaN;   % replace 60% of third column's values with NaN

r1=randperm(ro);
irisV(r1(1:p),4)=NaN;   % replace 60% of fourth column's values with NaN

%παράδειγμα 1,7 .Αντικατάσταση NaNs στο Iris dataset

%1.)διαγραφή των γραμμών με NaNs και προβολή του γραφήματος
data=irisV;
data (any(isnan(data),2),:) = [];
figure(2)
plot(data,'.')
title('διαγραφή των γραμμών με NaNs')

%2.)διαγραφή των στηλών με NaNs και προβολή του γραφήματος
data2=irisV;
data2 (:,any(isnan(data2),1)) = [];
figure(3)
plot(data2,'.')
title('διαγραφή των στηλών με NaNs')

%3.)Αντικατάσταση των NaNs με 0 και προβολή του γραφήματος
data3= irisV;
notNaN = ~isnan(data3);
data3(~notNaN) = 0;
figure(4)
plot(data3,'.')
title('αντικατάσταση των NaNs με 0')

%4.)Εύρεση των τιμών NaN και αντικατάσταση τους με τη μέση τιμή της στήλης που
%ανήκουν και προβολή του γραφήματος(χρησιμοποιώντας τις διαστάσεις μήκος
%πέταλου ως άξονας Χ και πλάτος πέταλου ως άξονας Υ

data4= irisV;
notNaN = ~isnan(data4);
data4(~notNaN) = 0;
totalNo = sum(notNaN);
columnTot = sum(data4);
colMean = columnTot./ totalNo;


for i = 1:length(colMean)
       data4(find(notNaN(:,i)==0),i)=colMean(i);
end
figure(5)
plot(data4,'.');
title('αντικατάσταση των NaNs με τη μέση τιμή της στήλης που ανήκουν')
xlim([10 70])
ylim([0 25])

%παράδειγμα 1,8 .Κανονικοποίηση Δεδομένων (a)


data5 =[-0.3999 -0.2625 -1.0106; 0.6900 0.2576 0.6145; 0.8156 -1.0565 0.5077; 0.7119 -0.2625 -0.0708; 0.4376 -0.8051 0.5913; 0.6686 0.5287 -0.6436; 1.1908 0.2193 0.3803; 0.4376 -0.9219 -1.0091; -0.0198 -0.2625 -0.0195; -0.1567 -0.0592 -0.0482];

figure(6)
plot(data5)
title('Initial data');

figure(7)
data5_LT=LinearTransform(data5);
subplot(2,1,1);
plot(data5_LT)
title('Linear Transform');

subplot(2,1,2);
data5_z=zscoreTransform(data5);
plot(data5_z)
title('z-score Transform');

%Με τη LinearTransform αντιστοιχίζουμε τις αριθμητικές τιμες του παραδείγματοςμε άλλες,
%οι οποίες κυμαίνονται εντός μιας προκαθορισμένης περιοχής τιμών ( min = 0 , max = 1).
%Διατηρείται η αναλογία που υπήρχε στα αρχικά δεδομένα.
%Με την οριοθετημένη περιοχή θα έχουμε μικρότερες τυποποιημένες αποκλίσεις
%με τις οποίες μπορούμε να κατστείλουμε τα outliers.

%H z-score μετασχηματίζει γραμμικά τα δεδομένα με τέτοιο τρόπο ώστε η μέση τιμή
%των μετασχηματισμένων δεδομένων να είναι 0 ενώ η τυπική απόκλιση είναι ίση με 1.
%Οι ίδιες οι μετασχηματισμένες τιμές δεν βρίσκονται σε ένα συγκεκριμένο διάστημα όπως [0,1]

%Διαφορά στα γραφήματα δεν υπάρχει.



%παράδειγμα 1,8 .Κανονικοποίηση Δεδομένων (b)

for i=1:4
    data6=iris(:,i);
    figure(7+i);
    subplot(3,1,1);
    plot(data6);
    title('Initial data');

    subplot(3,1,2);
    data_LT=LinearTransform(data6);
    plot(data_LT)
    title('Linear Transform');

    subplot(3,1,3);
    data_z=zscoreTransform(data6);
    plot(data_z)
    title('z-score Transform');
end

%Όπως και παραπάνω διαφορά στα γραφήματα μεταξύ min-max και z-score δεν παρατηρήθηκε 
